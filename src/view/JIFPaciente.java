/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.EnderecoData;
import data.PacienteData;
import extras.TratarFormularios;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Endereco;
import model.Paciente;

/**
 *
 * @author Paulo
 */
public class JIFPaciente extends javax.swing.JInternalFrame {
    private Paciente obj;
    private PacienteData DAO;
    private int acao = 0;
    private ArrayList<Paciente> listaDePacientes; 
   
    private Endereco endereco;
    private EnderecoData DAO2;
    private int acao2 = 0;
    private ArrayList<Endereco> listaDeEnderecos;
    
    private ArrayList<Paciente> listaPacientes2; // para carregar combo
    /**
     * Creates new form JIFPaciente
     */
    public JIFPaciente() {
        try {
            initComponents();
             obj = new Paciente();
            DAO = new PacienteData();
            listaDePacientes = new ArrayList<>();
            
            endereco = new Endereco();
            DAO2 = new EnderecoData();
            listaDeEnderecos = new ArrayList<>();
            
            listaPacientes2 = new ArrayList<>();
            listaPacientes2 = DAO.carregarCombo();
            jcbCodPaciente.removeAllItems();
            jcbCodPaciente.addItem("Selecione o paciente");
            for (Paciente p: listaPacientes2) {
                jcbCodPaciente.addItem(p.getNomePaciente());
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpPainelGuia = new javax.swing.JTabbedPane();
        jpPainel1 = new javax.swing.JPanel();
        jlCodPaciente = new javax.swing.JLabel();
        jlValorCodPaciente = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jlCpf = new javax.swing.JLabel();
        jftfCpf = new javax.swing.JFormattedTextField();
        jlTelefone = new javax.swing.JLabel();
        jftfTelefone = new javax.swing.JFormattedTextField();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jlPesquisar = new javax.swing.JLabel();
        jtfPesquisar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtDados = new javax.swing.JTable();
        jpPainel2 = new javax.swing.JPanel();
        jlId = new javax.swing.JLabel();
        jlValorId = new javax.swing.JLabel();
        jlRua = new javax.swing.JLabel();
        jtfRua = new javax.swing.JTextField();
        jlBairro = new javax.swing.JLabel();
        jtfBairro = new javax.swing.JTextField();
        jlNumero = new javax.swing.JLabel();
        jtfNumero = new javax.swing.JTextField();
        jlCidade = new javax.swing.JLabel();
        jtfCidade = new javax.swing.JTextField();
        jlEstado = new javax.swing.JLabel();
        jtfEstado = new javax.swing.JTextField();
        jbNovo2 = new javax.swing.JButton();
        jbSalvar2 = new javax.swing.JButton();
        jbCancelar2 = new javax.swing.JButton();
        jbEditar2 = new javax.swing.JButton();
        jbExcluir2 = new javax.swing.JButton();
        jlPesquisar2 = new javax.swing.JLabel();
        jlCodPaciente2 = new javax.swing.JLabel();
        jcbCodPaciente = new javax.swing.JComboBox<>();
        jtfPesquisar2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDados2 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Pacientes");

        jlCodPaciente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlCodPaciente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCodPaciente.setText("CodPaciente");

        jlValorCodPaciente.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlValorCodPaciente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlValorCodPaciente.setText("0");
        jlValorCodPaciente.setEnabled(false);

        jlNome.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlNome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNome.setText("Nome");

        jtfNome.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfNome.setEnabled(false);

        jlCpf.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlCpf.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCpf.setText("Cpf");

        try {
            jftfCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCpf.setEnabled(false);

        jlTelefone.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlTelefone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTelefone.setText("Telefone");

        try {
            jftfTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfTelefone.setEnabled(false);

        jbNovo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbEditar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jlPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPesquisar.setText("Pesquisar");

        jtfPesquisar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisarKeyReleased(evt);
            }
        });

        jtDados.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Paciente", "Cpf", "Nome", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtDados);

        javax.swing.GroupLayout jpPainel1Layout = new javax.swing.GroupLayout(jpPainel1);
        jpPainel1.setLayout(jpPainel1Layout);
        jpPainel1Layout.setHorizontalGroup(
            jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPainel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpPainel1Layout.createSequentialGroup()
                        .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlNome, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCodPaciente))
                        .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPainel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlValorCodPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(410, 410, 410))
                            .addGroup(jpPainel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jtfNome))))
                    .addGroup(jpPainel1Layout.createSequentialGroup()
                        .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jlPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlTelefone, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                            .addComponent(jlCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jpPainel1Layout.createSequentialGroup()
                                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfPesquisar)
                            .addComponent(jftfTelefone)
                            .addComponent(jftfCpf, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(37, 37, 37))
        );
        jpPainel1Layout.setVerticalGroup(
            jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPainel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodPaciente)
                    .addComponent(jlValorCodPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome)
                    .addComponent(jlNome, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar)
                    .addComponent(jbCancelar)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        jtpPainelGuia.addTab("Paciente", jpPainel1);

        jlId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlId.setText("Id");

        jlValorId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlValorId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlValorId.setText("0");
        jlValorId.setEnabled(false);

        jlRua.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlRua.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlRua.setText("Rua");

        jtfRua.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfRua.setEnabled(false);

        jlBairro.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlBairro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlBairro.setText("Bairro");

        jtfBairro.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfBairro.setEnabled(false);

        jlNumero.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlNumero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNumero.setText("Número");

        jtfNumero.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfNumero.setEnabled(false);

        jlCidade.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlCidade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCidade.setText("Cidade");

        jtfCidade.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfCidade.setEnabled(false);

        jlEstado.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlEstado.setText("Estado");

        jtfEstado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfEstado.setEnabled(false);

        jbNovo2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbNovo2.setText("Novo");
        jbNovo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovo2ActionPerformed(evt);
            }
        });

        jbSalvar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbSalvar2.setText("Salvar");
        jbSalvar2.setEnabled(false);
        jbSalvar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvar2ActionPerformed(evt);
            }
        });

        jbCancelar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbCancelar2.setText("Cancelar");
        jbCancelar2.setEnabled(false);
        jbCancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelar2ActionPerformed(evt);
            }
        });

        jbEditar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbEditar2.setText("Editar");
        jbEditar2.setEnabled(false);
        jbEditar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditar2ActionPerformed(evt);
            }
        });

        jbExcluir2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbExcluir2.setText("Excluir");
        jbExcluir2.setEnabled(false);
        jbExcluir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluir2ActionPerformed(evt);
            }
        });

        jlPesquisar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlPesquisar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPesquisar2.setText("Pesquisar");

        jlCodPaciente2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlCodPaciente2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCodPaciente2.setText("Paciente");

        jcbCodPaciente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jcbCodPaciente.setEnabled(false);

        jtfPesquisar2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfPesquisar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisar2KeyReleased(evt);
            }
        });

        jtDados2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtDados2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Rua", "Bairro", "Nº", "Cidade", "Bairro", "Paciente"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDados2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDados2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDados2);

        javax.swing.GroupLayout jpPainel2Layout = new javax.swing.GroupLayout(jpPainel2);
        jpPainel2.setLayout(jpPainel2Layout);
        jpPainel2Layout.setHorizontalGroup(
            jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPainel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlRua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlPesquisar2, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(jlId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlNumero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlBairro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCodPaciente2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPainel2Layout.createSequentialGroup()
                        .addComponent(jlValorId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpPainel2Layout.createSequentialGroup()
                        .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jtfRua)
                            .addComponent(jtfBairro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCidade, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfEstado, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbCodPaciente, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfNumero)
                            .addComponent(jtfPesquisar2)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpPainel2Layout.createSequentialGroup()
                                .addComponent(jbNovo2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbSalvar2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCancelar2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEditar2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbExcluir2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 29, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPainel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jpPainel2Layout.setVerticalGroup(
            jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPainel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlId)
                    .addComponent(jlValorId))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlRua, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfCidade)
                    .addComponent(jlCidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtfEstado)
                    .addComponent(jlEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCodPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCodPaciente2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo2)
                    .addComponent(jbSalvar2)
                    .addComponent(jbCancelar2)
                    .addComponent(jbEditar2)
                    .addComponent(jbExcluir2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpPainelGuia.addTab("Endereço", jpPainel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jtpPainelGuia, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jtpPainelGuia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jbNovo.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfNome.setEnabled(true);
        jftfCpf.setEnabled(true);
        jftfTelefone.setEnabled(true);
        jtfPesquisar.setEnabled(false);
        jtDados.setEnabled(false);
        jtfNome.setText("");
        jftfCpf.setText("");
        jftfTelefone.setText("");
        jtfPesquisar.setText("");
        acao = 1;
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        jbNovo.setEnabled(true);
        jbSalvar.setEnabled(false);
        jbCancelar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfNome.setEnabled(false);
        jftfCpf.setEnabled(false);
        jftfTelefone.setEnabled(false);
        jtfPesquisar.setEnabled(true);
        jtDados.setEnabled(false);
        jtfNome.setText("");
        jftfCpf.setText("");
        jftfTelefone.setText("");
        jtfPesquisar.setText("");
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        try {
            if (validarCampos()) {
                if (preencherObjeto()) {
                    if (acao == 1) {
                        if (DAO.incluir(obj)) {
                            JOptionPane.showMessageDialog(this, "Salvo com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelarActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Não foi possível salvar os dados!");
                        }
                    }
                    if (acao == 2) {
                        if (DAO.editar(obj)) {
                            JOptionPane.showMessageDialog(this, "Atualizado com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelarActionPerformed(evt);
                        }
                        else{
                            JOptionPane.showMessageDialog(this, "Não foi possível atualizar os dados!");
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtfPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisarKeyReleased
        try {
            DefaultTableModel mp = (DefaultTableModel) jtDados.getModel();
            mp.setNumRows(0);
            if (jtfPesquisar.getText().length() > 0) {
                listaDePacientes = DAO.pesquisar(jtfPesquisar.getText());
                for (Paciente p: listaDePacientes) {
                    mp.addRow(new String[]{"" + p.getCodPaciente(), p.getCpf(), p.getNomePaciente(), p.getTelefone()});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro ao pesquisar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtfPesquisarKeyReleased

    private void jtDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDadosMouseClicked
        try {
            int linhaSelecionada = jtDados.getSelectedRow();
            if (linhaSelecionada > -1) {
                jlValorCodPaciente.setText("" + listaDePacientes.get(linhaSelecionada).getCodPaciente());
                jftfCpf.setText(listaDePacientes.get(linhaSelecionada).getCpf());
                jtfNome.setText(listaDePacientes.get(linhaSelecionada).getNomePaciente());
                jftfTelefone.setText(listaDePacientes.get(linhaSelecionada).getTelefone());
                jbEditar.setEnabled(true);
                jbExcluir.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro ao pesquisar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtDadosMouseClicked

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        try {
            TratarFormularios.habilitarCampos(this);
        } catch (Exception ex) {
            Logger.getLogger(JIFPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
        jbNovo.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        acao = 2;
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        try {
            if (DAO.excluir(Integer.parseInt(jlValorCodPaciente.getText()))) {
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!");
                TratarFormularios.limparCampos(this);
                jbEditar.setEnabled(false);
                jbExcluir.setEnabled(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Erro ao pesquisar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbNovo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovo2ActionPerformed
        jbNovo2.setEnabled(false);
        jbSalvar2.setEnabled(true);
        jbCancelar2.setEnabled(true);
        jbEditar2.setEnabled(false);
        jbExcluir2.setEnabled(false);
        jtfRua.setEnabled(true);
        jtfBairro.setEnabled(true);
        jtfNumero.setEnabled(true);
        jtfCidade.setEnabled(true);
        jtfEstado.setEnabled(true);
        jcbCodPaciente.setEnabled(true);
        jtfPesquisar2.setEnabled(false);
        jtDados2.setEnabled(false);
        jtfRua.setText("");
        jtfBairro.setText("");
        jtfNumero.setText("");
        jtfCidade.setText("");
        jtfEstado.setText("");
        jcbCodPaciente.setSelectedIndex(0);
        acao2 = 1;
    }//GEN-LAST:event_jbNovo2ActionPerformed

    private void jbCancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelar2ActionPerformed
        jbNovo2.setEnabled(true);
        jbSalvar2.setEnabled(false);
        jbCancelar2.setEnabled(false);
        jbEditar2.setEnabled(false);
        jbExcluir2.setEnabled(false);
        jtfRua.setEnabled(false);
        jtfBairro.setEnabled(false);
        jtfNumero.setEnabled(false);
        jtfCidade.setEnabled(false);
        jtfEstado.setEnabled(false);
        jcbCodPaciente.setEnabled(false);
        jtfPesquisar2.setEnabled(true);
        jtDados2.setEnabled(false);
        jtfRua.setText("");
        jtfBairro.setText("");
        jtfNumero.setText("");
        jtfCidade.setText("");
        jtfEstado.setText("");
        jcbCodPaciente.setSelectedIndex(0);
    }//GEN-LAST:event_jbCancelar2ActionPerformed

    private void jbSalvar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvar2ActionPerformed
        try {
            if (validarCampos2()) {
                if (preencherObjeto2()) {
                    if (acao2 == 1) {
                        if (DAO2.incluir(endereco)) {
                            JOptionPane.showMessageDialog(this, "Salvo com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelar2ActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Não foi possível salvar os dados!");
                        }
                    }
                    if (acao2 == 2) {
                        if (DAO2.editar(endereco)) {
                            JOptionPane.showMessageDialog(this, "Editado com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelar2ActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Não foi possível atualizar os dados!");
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jbSalvar2ActionPerformed

    private void jtfPesquisar2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisar2KeyReleased
        try {
            DefaultTableModel mp = (DefaultTableModel) jtDados2.getModel();
            mp.setNumRows(0);
            if (jtfPesquisar2.getText().length() > 0) {
                listaDeEnderecos = DAO2.pesquisar(jtfPesquisar2.getText());
                for (Endereco e: listaDeEnderecos) {
                    mp.addRow(new String[]{"" + e.getId(), e.getRua(), e.getBairro(), "" + e.getNumero(), e.getCidade(), e.getEstado(), e.getPaciente().getNomePaciente()});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Meu sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtfPesquisar2KeyReleased

    private void jtDados2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDados2MouseClicked
        try {
            int linhaSelecionada = jtDados2.getSelectedRow();
            if (linhaSelecionada > -1) {
                jlValorId.setText("" + listaDeEnderecos.get(linhaSelecionada).getId());
                jtfRua.setText(listaDeEnderecos.get(linhaSelecionada).getRua());
                jtfBairro.setText(listaDeEnderecos.get(linhaSelecionada).getBairro());
                jtfNumero.setText("" +listaDeEnderecos.get(linhaSelecionada).getNumero());
                jtfCidade.setText(listaDeEnderecos.get(linhaSelecionada).getCidade());
                jtfEstado.setText(listaDeEnderecos.get(linhaSelecionada).getEstado());
                jcbCodPaciente.setSelectedItem(listaDeEnderecos.get(linhaSelecionada).getPaciente().getNomePaciente());
                jbEditar2.setEnabled(true);
                jbExcluir2.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Meu sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtDados2MouseClicked

    private void jbEditar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditar2ActionPerformed
        try {
            TratarFormularios.habilitarCampos(this);
        } catch (Exception ex) {
            Logger.getLogger(JIFPaciente.class.getName()).log(Level.SEVERE, null, ex);
        }
        jbNovo2.setEnabled(false);
        jbSalvar2.setEnabled(true);
        jbCancelar2.setEnabled(true);
        jbEditar2.setEnabled(false);
        jbExcluir2.setEnabled(false);
        acao2 = 2;
    }//GEN-LAST:event_jbEditar2ActionPerformed

    private void jbExcluir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluir2ActionPerformed
        try {
            if (DAO2.excluir(Integer.parseInt(jlValorId.getText()))) {
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                jbEditar2.setEnabled(false);
                jbExcluir2.setEnabled(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage(), "Meu sistema", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluir2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbCancelar2;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbEditar2;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbExcluir2;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbNovo2;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbSalvar2;
    private javax.swing.JComboBox<String> jcbCodPaciente;
    private javax.swing.JFormattedTextField jftfCpf;
    private javax.swing.JFormattedTextField jftfTelefone;
    private javax.swing.JLabel jlBairro;
    private javax.swing.JLabel jlCidade;
    private javax.swing.JLabel jlCodPaciente;
    private javax.swing.JLabel jlCodPaciente2;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlId;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlNumero;
    private javax.swing.JLabel jlPesquisar;
    private javax.swing.JLabel jlPesquisar2;
    private javax.swing.JLabel jlRua;
    private javax.swing.JLabel jlTelefone;
    private javax.swing.JLabel jlValorCodPaciente;
    private javax.swing.JLabel jlValorId;
    private javax.swing.JPanel jpPainel1;
    private javax.swing.JPanel jpPainel2;
    private javax.swing.JTable jtDados;
    private javax.swing.JTable jtDados2;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JTextField jtfCidade;
    private javax.swing.JTextField jtfEstado;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfNumero;
    private javax.swing.JTextField jtfPesquisar;
    private javax.swing.JTextField jtfPesquisar2;
    private javax.swing.JTextField jtfRua;
    private javax.swing.JTabbedPane jtpPainelGuia;
    // End of variables declaration//GEN-END:variables
    
    private boolean validarCampos() {
        
        String msg = "";
        
        if (jtfNome.getText().length() < 3 || jtfNome.getText().length() > 50) {
            msg += "O nome tem que ter pelo menos 3 ou no máximo 50 caracteres.";
        }
        
        if (jftfCpf.getText().trim().length() != 14) {
            msg += "\nO cpf tem que ter 11 caracteres.";
        }
        
        if (jftfTelefone.getText().trim().length() != 13) {
            msg += "\nO telefone tem que ter 11 caracteres.";
        }
        
        if (msg.length() == 0) {
            return true;
        }
        else {
            JOptionPane.showMessageDialog(this, "Corrija os seguintes campos: \n" + msg, "Meu sistema", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean preencherObjeto() {
        
        obj.setCodPaciente(Integer.parseInt(jlValorCodPaciente.getText()));
        obj.setCpf(jftfCpf.getText());
        obj.setNomePaciente(jtfNome.getText());
        obj.setTelefone(jftfTelefone.getText());
        
        return true;
    }
    
    private boolean validarCampos2() {
        
        String msg = "";
        
        if (jtfRua.getText().length() < 5 || jtfRua.getText().length() > 50) {
            msg += "A rua tem que ter pelo menos 10 ou no máximo 50 caracteres.";
        }
        
        if (jtfBairro.getText().length() < 5 || jtfBairro.getText().length() > 50) {
            msg += "\nO bairro tem que ter pelo menos 10 ou no máximo 50 caracteres.";
        }
        
        if (jtfNumero.getText().length() == 0) {
            msg += "\nO número do endereço tem que ser informado.";
        }
        
        if (jtfCidade.getText().length() < 5 || jtfCidade.getText().length() > 50) {
            msg += "\nA cidade tem que ter pelo menos 6 ou no máximo 50 caracteres.";
        }
        
        if (jtfEstado.getText().length() != 2) {
            msg += "\nO estado tem que ter 2 caracteres.";
        }
        
        if (jcbCodPaciente.getSelectedIndex() == 0) {
            msg += "\nSelecione um código de paciente.";
        }
        
        if (msg.length() == 0) {
            return true;
        }
        else {
            JOptionPane.showMessageDialog(this, "Corrija os seguintes campos \n" + msg, "Meu sistema", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean preencherObjeto2() {
        
        endereco.setId(Integer.parseInt(jlValorId.getText()));
        endereco.setRua(jtfRua.getText());
        endereco.setBairro(jtfBairro.getText());
        endereco.setNumero(Integer.parseInt(jtfNumero.getText()));
        endereco.setCidade(jtfCidade.getText());
        endereco.setEstado(jtfEstado.getText());
        endereco.setPaciente(listaPacientes2.get(jcbCodPaciente.getSelectedIndex() - 1)); // Posição 0 = Selecione
        
        return true;
    }
}
