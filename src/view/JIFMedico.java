/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.EspecialidadeData;
import data.MedicoData;
import extras.TratarFormularios;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Especialidade;
import model.Medico;

/**
 *
 * @author Paulo
 */
public class JIFMedico extends javax.swing.JInternalFrame {
    private Medico obj;
    private MedicoData DAO;
    private ArrayList<Medico> listaDeMedicos;
    private int acao = 0;
    
    private Especialidade especialidade;
    private EspecialidadeData DAO2;
    private int acao2 = 0;
    private ArrayList<Especialidade> listaDeEspecialidade;
    
    private ArrayList<Medico> listaMedicos2; // para carregar combo
    /**
     * Creates new form JIFMedico
     */
    public JIFMedico() {
        try {
            initComponents();
            obj = new Medico();
            DAO = new MedicoData();
            listaDeMedicos = new ArrayList<>();
            
            especialidade = new Especialidade();
            DAO2 = new EspecialidadeData();
            listaDeEspecialidade = new ArrayList<>();
            
            listaMedicos2 = new ArrayList<>();
            listaMedicos2= DAO.carregarCombo();
            jcbCodMedico.removeAllItems();
            jcbCodMedico.addItem("Selecione o médico");
            for (Medico m: listaMedicos2) {
                jcbCodMedico.addItem(m.getNomeMedico());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpPainelGuias = new javax.swing.JTabbedPane();
        jpPainel1 = new javax.swing.JPanel();
        jlCodMedico = new javax.swing.JLabel();
        jlValorCodMedico = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jlCrm = new javax.swing.JLabel();
        jtfCrm = new javax.swing.JTextField();
        jlEmail = new javax.swing.JLabel();
        jtfEmail = new javax.swing.JTextField();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jlPesquisar = new javax.swing.JLabel();
        jtfPesquisar = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtDados = new javax.swing.JTable();
        jpPainel2 = new javax.swing.JPanel();
        jlId = new javax.swing.JLabel();
        jlValorId = new javax.swing.JLabel();
        jlDescricao = new javax.swing.JLabel();
        jtfDescricao = new javax.swing.JTextField();
        jlMedico = new javax.swing.JLabel();
        jcbCodMedico = new javax.swing.JComboBox<>();
        jbNovo2 = new javax.swing.JButton();
        jbCancelar2 = new javax.swing.JButton();
        jbSalvar2 = new javax.swing.JButton();
        jbEditar2 = new javax.swing.JButton();
        jbExcluir2 = new javax.swing.JButton();
        jlPesquisar2 = new javax.swing.JLabel();
        jtfPesquisar2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDados2 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("Cadastro de Médico");

        jlCodMedico.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlCodMedico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCodMedico.setText("CodMedico");

        jlValorCodMedico.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlValorCodMedico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlValorCodMedico.setText("0");
        jlValorCodMedico.setEnabled(false);

        jlNome.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlNome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNome.setText("Nome");

        jtfNome.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfNome.setEnabled(false);

        jlCrm.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlCrm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCrm.setText("CRM");

        jtfCrm.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfCrm.setEnabled(false);

        jlEmail.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlEmail.setText("Email");

        jtfEmail.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfEmail.setEnabled(false);

        jbNovo.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setEnabled(false);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbEditar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jlPesquisar.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlPesquisar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPesquisar.setText("Pesquisar");

        jtfPesquisar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisarKeyReleased(evt);
            }
        });

        jtDados.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodMedico", "Nome", "CRM", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDadosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtDados);

        javax.swing.GroupLayout jpPainel1Layout = new javax.swing.GroupLayout(jpPainel1);
        jpPainel1.setLayout(jpPainel1Layout);
        jpPainel1Layout.setHorizontalGroup(
            jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPainel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlCodMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlCrm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlPesquisar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jpPainel1Layout.createSequentialGroup()
                        .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jtfPesquisar)
                    .addComponent(jtfEmail)
                    .addComponent(jtfCrm)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlValorCodMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jpPainel1Layout.setVerticalGroup(
            jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPainel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodMedico)
                    .addComponent(jlValorCodMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNome, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCrm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCrm, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo)
                    .addComponent(jbSalvar)
                    .addComponent(jbCancelar)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir))
                .addGap(18, 18, 18)
                .addGroup(jpPainel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jtpPainelGuias.addTab("Médico", jpPainel1);

        jlId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlId.setText("Id");

        jlValorId.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlValorId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlValorId.setText("0");
        jlValorId.setEnabled(false);

        jlDescricao.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlDescricao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlDescricao.setText("Descricao");

        jtfDescricao.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfDescricao.setEnabled(false);

        jlMedico.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlMedico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlMedico.setText("Médico");

        jcbCodMedico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione o médico", " " }));
        jcbCodMedico.setEnabled(false);

        jbNovo2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbNovo2.setText("Novo");
        jbNovo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovo2ActionPerformed(evt);
            }
        });

        jbCancelar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbCancelar2.setText("Cancelar");
        jbCancelar2.setEnabled(false);
        jbCancelar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelar2ActionPerformed(evt);
            }
        });

        jbSalvar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbSalvar2.setText("Salvar");
        jbSalvar2.setEnabled(false);
        jbSalvar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvar2ActionPerformed(evt);
            }
        });

        jbEditar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbEditar2.setText("Editar");
        jbEditar2.setEnabled(false);
        jbEditar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditar2ActionPerformed(evt);
            }
        });

        jbExcluir2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbExcluir2.setText("Excluir");
        jbExcluir2.setEnabled(false);
        jbExcluir2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluir2ActionPerformed(evt);
            }
        });

        jlPesquisar2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jlPesquisar2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPesquisar2.setText("Pesquisar");

        jtfPesquisar2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfPesquisar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisar2KeyReleased(evt);
            }
        });

        jtDados2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtDados2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Especialidade", "Médico"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtDados2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDados2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDados2);

        javax.swing.GroupLayout jpPainel2Layout = new javax.swing.GroupLayout(jpPainel2);
        jpPainel2.setLayout(jpPainel2Layout);
        jpPainel2Layout.setHorizontalGroup(
            jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPainel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPainel2Layout.createSequentialGroup()
                        .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jlDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlPesquisar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jlMedico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlValorId, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbCodMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpPainel2Layout.createSequentialGroup()
                                .addComponent(jbNovo2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbSalvar2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbCancelar2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEditar2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbExcluir2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jlId, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPainel2Layout.setVerticalGroup(
            jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPainel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlId, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlValorId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCodMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo2)
                    .addComponent(jbSalvar2)
                    .addComponent(jbCancelar2)
                    .addComponent(jbEditar2)
                    .addComponent(jbExcluir2))
                .addGap(18, 18, 18)
                .addGroup(jpPainel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlPesquisar2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpPainelGuias.addTab("Especialidade", jpPainel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jtpPainelGuias, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jtpPainelGuias, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jbNovo.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfNome.setEnabled(true);
        jtfCrm.setEnabled(true);
        jtfEmail.setEnabled(true);
        jtfPesquisar.setEnabled(false);
        jtDados.setEnabled(false);
        jtfNome.setText("");
        jtfCrm.setText("");
        jtfEmail.setText("");
        acao = 1;
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        jbNovo.setEnabled(true);
        jbSalvar.setEnabled(false);
        jbCancelar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jtfNome.setEnabled(false);
        jtfCrm.setEnabled(false);
        jtfEmail.setEnabled(false);
        jtfPesquisar.setEnabled(true);
        jtDados.setEnabled(false);
        jtfNome.setText("");
        jtfCrm.setText("");
        jtfEmail.setText("");
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        try {
            if (validarCampos()) {
                if (preencherObjeto()) {
                    if (acao == 1) {
                        if (DAO.incluir(obj)) {
                            JOptionPane.showMessageDialog(this, "Salvo com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelarActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Não foi possível salvar os dados!", "Meu sistema", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
                if (preencherObjeto()) {
                    if (acao == 2) {
                        if (DAO.editar(obj)) {
                            JOptionPane.showMessageDialog(this, "Atualizado com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelarActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Não foi possível atualizar os dados!", "Meu sistema", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtfPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisarKeyReleased
        try {
            DefaultTableModel mp = (DefaultTableModel) jtDados.getModel();
            mp.setNumRows(0);
            if (jtfPesquisar.getText().length() > 0) {
                listaDeMedicos = DAO.pesquisar(jtfPesquisar.getText());
                for (Medico m: listaDeMedicos) {
                    mp.addRow(new String[]{"" + m.getCodMedico(), m.getNomeMedico(), m.getCrm(), m.getEmail()});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jtfPesquisarKeyReleased

    private void jtDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDadosMouseClicked
        try {
            int linhaSelecionada = jtDados.getSelectedRow();
            if (linhaSelecionada > -1) {
                jlValorCodMedico.setText("" + listaDeMedicos.get(linhaSelecionada).getCodMedico());
                jtfNome.setText(listaDeMedicos.get(linhaSelecionada).getNomeMedico());
                jtfCrm.setText(listaDeMedicos.get(linhaSelecionada).getCrm());
                jtfEmail.setText(listaDeMedicos.get(linhaSelecionada).getEmail());
                jbEditar.setEnabled(true);
                jbExcluir.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jtDadosMouseClicked

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        try {
            TratarFormularios.habilitarCampos(this);
        } catch (Exception ex) {
            Logger.getLogger(JIFMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
        jbNovo.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        acao = 2;
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        try {
            if (DAO.excluir(Integer.parseInt(jlValorCodMedico.getText()))) {
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                jbEditar.setEnabled(false);
                jbExcluir.setEnabled(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbNovo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovo2ActionPerformed
        jbNovo2.setEnabled(false);
        jbSalvar2.setEnabled(true);
        jbCancelar2.setEnabled(true);
        jbEditar2.setEnabled(false);
        jbExcluir2.setEnabled(false);
        jtfDescricao.setEnabled(true);
        jcbCodMedico.setEnabled(true);
        jtfPesquisar2.setEnabled(false);
        jtDados2.setEnabled(false);
        jtfDescricao.setText("");
        jcbCodMedico.setSelectedIndex(0);
        jtfPesquisar2.setText("");
        acao2 = 1;
    }//GEN-LAST:event_jbNovo2ActionPerformed

    private void jbCancelar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelar2ActionPerformed
        jbNovo2.setEnabled(true);
        jbSalvar2.setEnabled(false);
        jbCancelar2.setEnabled(false);
        jbEditar2.setEnabled(false);
        jbExcluir2.setEnabled(false);
        jtfDescricao.setEnabled(false);
        jcbCodMedico.setEnabled(false);
        jtfPesquisar2.setEnabled(true);
        jtDados2.setEnabled(false);
        jtfDescricao.setText("");
        jcbCodMedico.setSelectedIndex(0);
        jtfPesquisar2.setText("");
    }//GEN-LAST:event_jbCancelar2ActionPerformed

    private void jbSalvar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvar2ActionPerformed
        try {
            if (validarCampos2()) {
                if (preencherObjeto2()) {
                    if (acao2 == 1) {
                        if (DAO2.incluir(especialidade)) {
                            JOptionPane.showMessageDialog(this, "Salvo com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelar2ActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Erro ao salvar!", "Meu sistema", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    if (acao2 == 2) {
                        if (DAO2.editar(especialidade)) {
                            JOptionPane.showMessageDialog(this, "Atualizado com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                            jbCancelar2ActionPerformed(evt);
                        }
                        else {
                            JOptionPane.showMessageDialog(this, "Erro ao atualizar!", "Meu sistema", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jbSalvar2ActionPerformed

    private void jtfPesquisar2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisar2KeyReleased
        try {
            DefaultTableModel mp = (DefaultTableModel) jtDados2.getModel();
            mp.setNumRows(0);
            if (jtfPesquisar2.getText().length() > 0) {
                listaDeEspecialidade = DAO2.pesquisar(jtfPesquisar2.getText());
                for (Especialidade e: listaDeEspecialidade) {
                    mp.addRow(new String[]{"" + e.getId(), e.getDescricao(), e.getMedico().getNomeMedico()});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jtfPesquisar2KeyReleased

    private void jtDados2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDados2MouseClicked
        try {
            int linhaSelecionada = jtDados2.getSelectedRow();
            if (linhaSelecionada > -1) {
                jlValorId.setText("" + listaDeEspecialidade.get(linhaSelecionada).getId());
                jtfDescricao.setText(listaDeEspecialidade.get(linhaSelecionada).getDescricao());
                jcbCodMedico.setSelectedItem(listaDeEspecialidade.get(linhaSelecionada).getMedico().getNomeMedico());
                jbEditar2.setEnabled(true);
                jbExcluir2.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jtDados2MouseClicked

    private void jbEditar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditar2ActionPerformed
        try {
            TratarFormularios.habilitarCampos(this);
        } catch (Exception ex) {
            Logger.getLogger(JIFMedico.class.getName()).log(Level.SEVERE, null, ex);
        }
        jbNovo2.setEnabled(false);
        jbSalvar2.setEnabled(true);
        jbCancelar2.setEnabled(true);
        jbEditar2.setEnabled(false);
        jbExcluir2.setEnabled(false);
        acao2 = 2;
    }//GEN-LAST:event_jbEditar2ActionPerformed

    private void jbExcluir2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluir2ActionPerformed
        try {
            if (DAO2.excluir(Integer.parseInt(jlValorId.getText()))) {
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                jbEditar2.setEnabled(false);
                jbExcluir2.setEnabled(false);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }
    }//GEN-LAST:event_jbExcluir2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbCancelar2;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbEditar2;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbExcluir2;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbNovo2;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbSalvar2;
    private javax.swing.JComboBox<String> jcbCodMedico;
    private javax.swing.JLabel jlCodMedico;
    private javax.swing.JLabel jlCrm;
    private javax.swing.JLabel jlDescricao;
    private javax.swing.JLabel jlEmail;
    private javax.swing.JLabel jlId;
    private javax.swing.JLabel jlMedico;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlPesquisar;
    private javax.swing.JLabel jlPesquisar2;
    private javax.swing.JLabel jlValorCodMedico;
    private javax.swing.JLabel jlValorId;
    private javax.swing.JPanel jpPainel1;
    private javax.swing.JPanel jpPainel2;
    private javax.swing.JTable jtDados;
    private javax.swing.JTable jtDados2;
    private javax.swing.JTextField jtfCrm;
    private javax.swing.JTextField jtfDescricao;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfPesquisar;
    private javax.swing.JTextField jtfPesquisar2;
    private javax.swing.JTabbedPane jtpPainelGuias;
    // End of variables declaration//GEN-END:variables
    
    private boolean validarCampos() {
        
        String msg = "";
        
        if (jtfNome.getText().length() < 3 || jtfNome.getText().length() > 50) {
            msg += "O nome deve ter pelo menos 3 ou no máximo 50 caracteres.";
        }
        
        if (jtfCrm.getText().length() < 4 || jtfCrm.getText().length() > 10) {
            msg += "\nO crm deve ter pelo menos 4 ou no máximo 10 caracteres.";
        }
        
        if (jtfEmail.getText().length() < 10) {
            msg += "\nO email deve ter pelo menos 10 caracteres.";
        }
        
        if (msg.length() == 0) {
            return true;
        }
        else {
            JOptionPane.showMessageDialog(this, "Corrija: \n" + msg, "Meu sistema", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean preencherObjeto() {
        
        obj.setCodMedico(Integer.parseInt(jlValorCodMedico.getText()));
        obj.setNomeMedico(jtfNome.getText());
        obj.setCrm(jtfCrm.getText());
        obj.setEmail(jtfEmail.getText());
        
        return true;
    }
    
    private boolean validarCampos2() {
        
        String msg = "";
        
        if (jtfDescricao.getText().length() < 5 || jtfDescricao.getText().length() > 50) {
            msg += "Informe uma especialidade válida.";
        }
        
        if (jcbCodMedico.getSelectedIndex() == 0) {
            msg += "\nSelecione um médico.";
        }
        
        if (msg.length() == 0) {
            return true;
        }
        else {
            JOptionPane.showMessageDialog(this, "Corrija: \n" + msg, "Meu sistema", JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }
    
    private boolean preencherObjeto2() {
        
        especialidade.setId(Integer.parseInt(jlValorId.getText()));
        especialidade.setDescricao(jtfDescricao.getText());
        especialidade.setMedico(listaMedicos2.get(jcbCodMedico.getSelectedIndex() - 1));
        
        return true;
    }
}
